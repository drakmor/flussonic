#!/usr/bin/env ERL_LIBS=apps:deps escript

% sublime: syntax Erlang

-include_lib("rtmp/include/rtmp.hrl").

-mode(compile).

main([URL|Args]) ->
  Root = filename:join(filename:dirname(escript:script_name()), ".."),
  [code:add_pathz(Path_) || Path_ <- filelib:wildcard(Root ++ "/*/*/ebin")],

  application:load(lager),
  application:set_env(lager,handlers,[{lager_console_backend,info}]),
  application:set_env(lager,error_logger_redirect,true),
  application:set_env(lager,crash_log,undefined),
  lager:start(),
  application:start(rtmp),

  Options = lists:map(fun(Arg) ->
    [K,V] = string:tokens(Arg, "="),
    {list_to_atom(K), list_to_binary(V)}
  end, Args),

  {ok, RTMP, _Stream} = rtmp_lib:play(URL, Options),

  loop(RTMP),
  ok.


loop(RTMP) ->
  receive
    {rtmp, RTMP, #rtmp_message{timestamp = TS, type = Type} = M} -> io:format("rtmp ~16.. s ~B~s~n", [Type, TS, info(M)]), loop(RTMP);
    Msg -> io:format("~p ~n", [Msg])
  end.

info(#rtmp_message{type = metadata, body = Body}) -> io_lib:format(" ~240p", [Body]);
info(_) -> "".
